<h1>About</h1>
<h4>CMSIMDE來源:<a href="https://github.com/mdecourse/cmstemplate">https://github.com/mdecourse/cmstemplate</a></h4>
<h4>小組倉儲:<a href="https://github.com/40823245/cad2020bg2">https://github.com/40823245/cad2020bg2</a></h4>
<h4>小組成員:</h4>
<h6 style="text-align: left;"> <a href="https://github.com/40823211/cad2020">40823211</a> / <a href="https://40823211.github.io/cad2020">40823211</a><br/> <a href="https://github.com/40823213/cad2020">40823213</a> / <a href="https://40823213.github.io/cad2020">40823213</a><br/> <a href="https://github.com/40823214/cad2020">40823214</a> / <a href="https://40823214.github.io/cad2020">40823214</a><br/> <a href="https://github.com/40823222/cad2020">40823222</a> / <a href="https://40823222.github.io/cad2020">40823222</a><br/> <a href="https://github.com/40823229/cad2020">40823229</a> / <a href="https://40823229.github.io/cad2020">40823229</a><br/> <a href="https://github.com/40823230/cad2020">40823230</a> / <a href="https://40823230.github.io/cad2020">40823230</a><br/> <a href="https://github.com/40823231-2/cad2020">40823231</a> / <a href="https://40823231-2.github.io/cad2020">40823231</a><br/> <a href="https://github.com/40823236/cad2020">40823236</a> / <a href="https://40823236.github.io/cad2020">40823236</a><br/> <a href="https://github.com/40823242/cad2020">40823242</a> / <a href="https://40823242.github.io/cad2020">40823242</a><br/> <a href="https://github.com/40823245/cad2020">40823245</a> / <a href="https://40823245.github.io/cad2020">40823245</a><span><span> </span>(組長)</span></h6>
<h1>討論會議</h1>
<h4>使用gitter進行討論，並錄製過程和截圖</h4>
<h4>小組gitter:<a href="https://gitter.im/cad2020bg2/community">https://gitter.im/cad2020bg2/community</a></h4>
<h4>進度:</h4>
<h4>12/04</h4>
<h4>使用gitter進行討論，並錄製過程和截圖</h4>
<h4>12/11</h4>
<h4>討論並投票圖檔的版本</h4>
<h4>12/25</h4>
<h4>修改圖檔和模擬</h4>
<h4>01/07</h4>
<h4>程式模擬和做動模擬</h4>
<h4>01/15</h4>
<h4>程式模擬和修正之前的錯誤</h4>
<h2>12-04</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/yx_p7bOd9Zc" width="560"></iframe></p>
<h4>討論結果為要做彈珠台，並小組分工</h4>
<h4>因為錄製影片出問題，所以後續內容用截圖</h4>
<p><img alt="" height="600" src="/images/1204-1.png" width="300"/></p>
<p><img alt="" height="600" src="/images/1204-2.png" width="300"/></p>
<p><img alt="" height="600" src="/images/1204-3.png" width="300"/></p>
<p><img alt="" height="600" src="/images/1204-4.png" width="300"/></p>
<p><img alt="" height="400" src="/images/1204-5.png" width="300"/></p>
<h2>12-11</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/U-f1MEBiARo" width="560"></iframe> <iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/CUtr0AOiFDA" width="560"></iframe></p>
<h4>討論結果</h4>
<h4><a href="/downloads/彈珠台/彈珠檯完成品.ipt">圖檔</a></h4>
<p><img caption="false" height="500" src="/images/1211.png" width="300"/></p>
<h2>12-24</h2>
<h4>測試影片:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/inBv_vKQhe0" width="560"></iframe></p>
<h4><a href="/downloads/彈珠台/pinblall-3.ttt">pinblall-3.ttt</a></h4>
<h4><a href="/downloads/彈珠台/組合彈珠檯.iam">圖檔</a></h4>
<h4>提出問題並修改</h4>
<p><img alt="" height="300" src="/images/1224.png" width="1000"/></p>
<h2>01-07</h2>
<h4>程式模擬和做動模擬:</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/zxhT-XWSy5c" width="560"></iframe></p>
<h4><a href="/downloads/彈珠台/pinblall-9.ttt">pinblall-9.ttt</a></h4>
<h4><a href="/downloads/彈珠台/彈珠台組合.stl">圖檔</a></h4>
<h4>第1次測試因為stick為可穿透的，所以ball沒辦法被stick擋住，還有程式控制鍵盤上下鍵所位移的位置和設定需再調整，第2次測試stick為不可穿透，但程式控制鍵盤上下有問題，所以還須修正</h4>
<p><img caption="false" height="80" src="/images/0107.png" width="400"/></p>
<h2>01-15</h2>
<h4>測試影片</h4>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/o9oK-7f_33U" width="560"></iframe></p>
<h4><a href="/get_page/downloads/彈珠台/pinblall-17.ttt">pinblall-17.ttt</a></h4>
<h4><a href="/get_page/downloads/彈珠台/彈珠檯-888.stl">圖檔</a></h4>
<h4>將之前的桿子改成圓桿，球和桿子能確實地做動，但還是有破圖、球卡到角飛出去、桿子座標亂飄等問題尚未解決。</h4>
<h4>程式</h4>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">-- model in Solvespace 500 mm = 5000 mm in V-rep
--[[
Simulation is 10 times of realistic environment
floor in Solvespace 2.5 m x 2.5 m = 25 m x 25 m in V-rep
ball is in Solivespace 1g (0.001) = 0.01 kg in V-rep
Cylinder is in Solvespace 0.1 kg (100g) = 1kg in V-rep (0.1 for Inertia)
]]
 
threadFunction=function()
    while sim.getSimulationState()~=sim.simulation_advancing_abouttostop do
        -- Read the keyboard messages (make sure the focus is on the main window, scene view):
        message,auxiliaryData=sim.getSimulatorMessage()
        while message~=-1 do
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==2007) then
                    -- up key
                    velocity=0.5
                    Cylinder_back = 0
                end
                if (auxiliaryData[1]==2008) then
                    -- down key
                     Cylinder_back = 1
                     velocity = -0.5
                end
            end
            message,auxiliaryData=sim.getSimulatorMessage()
        end
  
        -- We take care of setting the desired Cylinder position:
        if Cylinder_back == 1
            then sim.setObjectPosition(Cylinder,-1, position)
        end
        sim.setJointTargetVelocity(joint,velocity)
  
        -- Since this script is threaded, don't waste time here:
        sim.switchThread() -- Resume the script at next simulation loop start
    end
end
-- Put some initialization code here:
-- Retrieving of some handles and setting of some initial values:
joint=sim.getObjectHandle('joint')
Cylinder=sim.getObjectHandle('Cylinder')
velocity=0
Cylinder_back=0
position=sim.getObjectPosition(Cylinder,-1)
  
-- Here we execute the regular thread code:
res,err=xpcall(threadFunction,function(err) return debug.traceback(err) end)
if not res then
    sim.addStatusbarMessage('Lua runtime error: '..err)
end
  
-- Put some clean-up code here:</pre>
<p></p><h1>小組分工</h1>
<h4>繪圖:40823213 40823214 40823230</h4>
<h4>程式:40823245</h4>
<h4>機構:40823211 40823222 40823231 40823236 40823242</h4>